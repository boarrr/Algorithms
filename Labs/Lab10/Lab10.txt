/*
        Description: A program which uses a queue to store characters of an input string from the user.
        Date: 16/04/2024
        Author: Ryan Pitman
*/

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

#define MAX 50

struct queue {
        char *array;
        int size;
};

void init(struct queue *keystrokes);
void add_character(struct queue *keystrokes, char character);   
void process_queue(struct queue *keystrokes);
void swap_char(char *character);
void display_queue(struct queue keystrokes);

int main(void)
{
        struct queue keystrokes;
        char string1[] = "Keyboard *Test*ing";

        init(&keystrokes);

        for (int i = 0; string1[i] != '\0'; i++) {
                add_character(&keystrokes, string1[i]);
        }

        process_queue(&keystrokes);Â 
        display_queue(keystrokes);

        printf("\n");

        return 0;
}

void init(struct queue *keystrokes)
{
        keystrokes->array = malloc(MAX * sizeof(char));
        keystrokes->size = 0;
}


void add_character(struct queue *keystrokes, char character)
{
        if (keystrokes->size < MAX) {
                keystrokes->array[keystrokes->size] = character;
                keystrokes->size++;
        }
        else {
                printf("Queue is full!\n");
        }
}

void process_queue(struct queue *keystrokes)
{
        int toggle_upper = 0;

        for (int i = 0; i < keystrokes->size; i++) {
                if(keystrokes->array[i] == '*') {
                        toggle_upper = !toggle_upper;
                }
                else {
                        if(toggle_upper)
                                swap_char(&keystrokes->array[i]);
                }
        }
}

void swap_char(char *character)
{
        if (islower(*character))
                *character = toupper(*character);
        else
                *character = tolower(*character);
}

void display_queue(struct queue keystrokes)
{
        for (int i = 0; i < keystrokes.size; i++) {
                if (keystrokes.array[i] != '*')
                        printf("%c", keystrokes.array[i]);
        }
}